{"meta":{"version":"0.3.3","format":20,"date":1642076445023},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/34704796/147868696-bf61c114-7b94-41fe-8421-fc9b39c094ba.png\" alt=\"Logo\">\n\n  <div>\n    <img alt=\"GitHub\" src=\"https://img.shields.io/github/license/musiccajs/musicca\">\n    <img alt=\"npm\" src=\"https://img.shields.io/npm/dt/musicca\">\n    <img alt=\"GitHub issues\" src=\"https://img.shields.io/github/issues/musiccajs/musicca\">\n  </div>\n</div>\n\n# About ðŸ“›\n\nThis package is a collection of structures for [Musicca](https://www.npmjs.com/package/musicca).\n\n# Installation ðŸ’¾\n\n```sh-session\nnpm install @musicca/structs\nyarn add @musicca/structs\npnpm add @musicca/structs\n```\n\n# Guide ðŸ–‹\n\n## Creating custom queue\n\nFirst, you need to create a new queue class with your custom implementation\n\n```ts\nimport { Queue, Media } from 'musicca';\n\nexport default class CustomQueue extends Queue {\n  public list: Media[] = [];\n\n  // Always put options at the 3rd parameter\n  constructor(manager, id, options) { ... }\n\n  // All custom methods are awaitable by default\n  public all() { ... }\n  public add<T extends Media | Media[] = Media>(media: T, position?: number) { ... }\n  public get(position: number) { ... }\n  public remove(position: number) { ... }\n  public clear() { ... }\n  public indexOf(media: Media) { ... }\n}\n```\n\nNow, you can just plug it in to musicca\n\n```ts\nconst client = new Musicca<CustomQueue>({\n  plugins: { ... },\n  structs: {\n    queue: CustomQueue\n  }\n});\n```\n\n# Links ðŸ”—\n\n- [Website](https://musicca.edqe.me) ([source](https://github.com/musiccajs/website))\n- [Documentation](https://musicca.edqe.me/docs)\n- [Github](https://github.com/musiccajs/structs)\n- [npm](https://www.npmjs.com/package/@musicca/structs)\n","path":"README.md"}}}},"classes":[{"name":"MemoryQueue","extends":["Queue"],"construct":{"name":"constructor","params":[{"name":"manager","optional":false,"type":[[["QueueManager","<"],["default",">"]]]},{"name":"id","optional":true,"type":[[["string"]]]}],"returns":[[["default"]]]},"props":[{"name":"id","readonly":true,"type":[[["string"]]],"meta":{"line":4,"file":"BasePlugin.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"list","default":"[]","type":[[["Array","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>"]]],"meta":{"line":4,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"manager","readonly":true,"type":[[["QueueManager","<"],["default",">"]]],"meta":{"line":6,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"position","type":[[["number"]]],"meta":{"line":7,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"type","readonly":true,"type":[[["PluginType"]]],"meta":{"line":3,"file":"BasePlugin.d.ts","path":"node_modules/musicca/dist/lib/structs"}}],"methods":[{"name":"add","params":[{"name":"media","optional":false,"type":[[["T"]]]},{"name":"position","optional":true,"type":[[["number"]]]}],"returns":[[["T"]]],"meta":{"line":10,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"all","returns":[[["Array","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>"]]],"meta":{"line":6,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"clear","returns":[[["void"]]],"meta":{"line":27,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"current","returns":[[["Promise","<"],["Nullable","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>>"]]],"meta":{"line":17,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"get","params":[{"name":"position","optional":false,"type":[[["number"]]]}],"returns":[[["Media","<"],["Extractor","<"],["ExtractorOptions",">>"]]],"meta":{"line":19,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"indexOf","params":[{"name":"media","optional":false,"type":[[["Media","<"],["Extractor","<"],["ExtractorOptions",">>"]]]}],"returns":[[["number"]]],"meta":{"line":31,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"next","returns":[[["Promise","<"],["Nullable","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>>"]]],"meta":{"line":18,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"play","params":[{"name":"resolvable","optional":false,"type":[[["number"," | "],["MediaResolvable"]]]}],"returns":[[["Promise","<"],["Readable",">"]]],"meta":{"line":19,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"previous","returns":[[["Promise","<"],["Nullable","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>>"]]],"meta":{"line":16,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"remove","params":[{"name":"position","optional":false,"type":[[["number"]]]}],"returns":[[["Media","<"],["Extractor","<"],["ExtractorOptions",">>"]]],"meta":{"line":23,"file":"MemoryQueue.ts","path":"src/lib"}},{"name":"resolveMedia","params":[{"name":"resolvable","optional":false,"type":[[["number"," | "],["MediaResolvable"]]]}],"returns":[[["Promise","<"],["Nullable","<"],["Media","<"],["Extractor","<"],["ExtractorOptions",">>>>"]]],"meta":{"line":20,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}},{"name":"size","returns":[[["Promise","<"],["number",">"]]],"meta":{"line":15,"file":"Queue.d.ts","path":"node_modules/musicca/dist/lib/structs"}}],"meta":{"line":3,"file":"MemoryQueue.ts","path":"src/lib"}}],"typedefs":[]}